services:
  - name: docker:dind

.vars_docker:
  variables:
    ARTIFACTS: ARTIFACTS
    tag: ssm

docker-build:
  stage: docker-build
  variables: !reference [".vars_docker", "variables"]
  script:
    - mkdir image
    - docker build . -t $CI_REGISTRY_IMAGE:$tag
    - docker save $CI_REGISTRY_IMAGE:$tag > image/$ARTIFACTS.tar
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
  artifacts:
    paths:
      - image/
    expire_in: 1 week

docker-push:
  stage: docker-push
  variables: !reference [".vars_docker", "variables"]
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker load -i image/$ARTIFACTS.tar
    - docker push $CI_REGISTRY_IMAGE:$tag
  when: manual

stages:
  - docker-build
  - docker-push
  
image: docker:latest
